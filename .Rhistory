train_df <- train_df %>%
mutate(proba = predict(lm_model, type="response")) %>%
mutate(y_pred = ifelse(proba > 0.5, "yes", "no"))
pospos <- sum(train_df$y_pred=="yes" & train_df$y=="yes")
posneg <- sum(train_df$y_pred=="yes" & train_df$y=="no")
negpos <- sum(train_df$y_pred=="no" & train_df$y=="yes")
negneg <- sum(train_df$y_pred=="no" & train_df$y=="no")
accuracy <- (pospos+negneg)/nrow(train_df)
precision <- (pospos) / (pospos + negpos)
recall <- (pospos) / (pospos + posneg)
f1 <- 2 * precision*recall / (precision + recall)
accuracy
recall
coef(lm_model)
coef(lm_model) %>% order()
coef(lm_model) %>% sort()
coef(lm_model) %>% sort(decreasing = TRUE)
top_coef <- coef(lm_model) %>% sort(decreasing = TRUE)
top_coef <- coef(lm_model) %>% sort(decreasing = TRUE) %>% head(10)
top_coef <- coef(lm_model) %>% sort(decreasing = TRUE) %>% head(10)
top_coef
top_coef <- coef(lm_model) %>% sort(decreasing = TRUE) %>% head(15)
top_coef %>%
ggplot(aes(y=top_coef)) +
geom_bar()
top_coef <- coef(lm_model) %>% sort(decreasing = TRUE) %>% head(15) %>% tibble()
top_coef %>%
ggplot(aes(y=top_coef)) +
geom_bar()
top_coef <- coef(lm_model) %>% sort(decreasing = TRUE) %>% head(15)
tibble(top_coef)
top_coef <- coef(lm_model) %>% sort(decreasing = TRUE) %>% head(15)
data.frame(top_coef)
top_coef <- coef(lm_model) %>% sort(decreasing = TRUE) %>% head(15)
data.frame(top_coef) %>%
ggplot(aes(y=top_coef)) +
geom_bar()
top_coef <- coef(lm_model) %>% sort(decreasing = TRUE) %>% head(15)
data.frame(top_coef)
top_coef <- coef(lm_model) %>% sort(decreasing = TRUE) %>% head(15) %>% data.frame()
top_coef
rownames(top_coef)
top_coef <- coef(lm_model) %>%
sort(decreasing = TRUE) %>%
head(15) %>%
data.frame() %>%
mutate(coef=rownames())
top_coef <- coef(lm_model) %>%
sort(decreasing = TRUE) %>%
head(15) %>%
data.frame()
colnames(top_coef) <- value
top_coef <- coef(lm_model) %>%
sort(decreasing = TRUE) %>%
head(15) %>%
data.frame()
colnames(top_coef) <- value
top_coef <- coef(lm_model) %>%
sort(decreasing = TRUE) %>%
head(15) %>%
data.frame()
colnames(top_coef) <- "value"
top_coef <- coef(lm_model) %>%
sort(decreasing = TRUE) %>%
head(15) %>%
data.frame()
colnames(top_coef) <- "value"
top_coef$coef <- rownames(top_coef)
top_coef
top_coef <- coef(lm_model) %>%
sort(decreasing = TRUE) %>%
head(15) %>%
data.frame()
colnames(top_coef) <- "value"
top_coef$coef <- rownames(top_coef)
top_coef %>%
ggplot(aes(y=coef, x = value)) +
geom_bar()
top_coef <- coef(lm_model) %>%
sort(decreasing = TRUE) %>%
head(15) %>%
data.frame()
colnames(top_coef) <- "value"
top_coef$coef <- rownames(top_coef)
top_coef %>%
ggplot(aes(y=coef, x = value)) +
geom_bar(stat="identity")
top_coef <- coef(lm_model) %>%
sort(decreasing = TRUE) %>%
head(15) %>%
data.frame()
colnames(top_coef) <- "value"
top_coef$coef <- rownames(top_coef)
top_coef %>%
ggplot(aes(y=reorder(coef,-value), x = value)) +
geom_bar(stat="identity")
top_coef <- coef(lm_model) %>%
sort(decreasing = TRUE) %>%
head(15) %>%
data.frame()
colnames(top_coef) <- "value"
top_coef$coef <- rownames(top_coef)
top_coef %>%
ggplot(aes(y=reorder(coef,value), x = value)) +
geom_bar(stat="identity")
top_coef <- coef(lm_model) %>%
sort(decreasing = TRUE) %>%
head(15) %>%
data.frame()
colnames(top_coef) <- "value"
top_coef$coef <- rownames(top_coef)
top_coef %>%
ggplot(aes(y=reorder(coef,value), x = value)) +
geom_bar(stat="identity") +
labs(x="Coefficient Magnitude (Greater the stronger)", y="Coefficients") +
ggtitle("Top 15 Important Variables From Logistic Model")
top_coef <- coef(lm_model) %>%
sort(decreasing = TRUE) %>%
head(15) %>%
data.frame()
colnames(top_coef) <- "value"
top_coef$coef <- rownames(top_coef)
top_coef %>%
ggplot(aes(y=reorder(coef,value), x = value)) +
geom_bar(stat="identity") +
labs(x="Coefficient Magnitude (Greater the more important)", y="Coefficients") +
ggtitle("Top 15 Important Variables From Logistic Model")
top_coef <- coef(lm_model) %>%
sort(decreasing = TRUE) %>%
head(15) %>%
data.frame()
colnames(top_coef) <- "value"
top_coef$coef <- rownames(top_coef)
top_coef %>%
ggplot(aes(y=reorder(coef,value), x = value)) +
geom_bar(stat="identity") +
labs(x="Coefficient Magnitude (Greater the more important)", y="Coefficients") +
ggtitle("Top 15 Important Variables From Logistic Model") +
theme(plot.title=element_text(hjust=0.5, face="bold"))
top_coef <- coef(lm_model) %>%
sort(decreasing = TRUE) %>%
head(15) %>%
data.frame()
colnames(top_coef) <- "value"
top_coef$coef <- rownames(top_coef)
top_coef %>%
ggplot(aes(y=reorder(coef,value), x = value)) +
geom_bar(stat="identity") +
labs(x="Coefficient Magnitude (Greater the more important)", y="Coefficients") +
ggtitle("Top 15 Important Variables From Logistic Model") +
theme(plot.title=element_text(hjust=0.5, face="bold"))
train_df %>%
group_by(education, y) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n)) %>%
filter(y=="yes" & education != "unknown") %>%
ggplot(aes(x = education, y=freq, fill=education)) +
geom_bar(stat="identity") +
geom_text(aes(y =freq , label=paste0(round(freq,3)*100,"%")),nudge_y=0.01) +
scale_y_continuous(labels=scales::percent, limits=c(0, 0.2)) +
labs(y = "Percentage Subscribed", x = "Marital Status", fill = "") +
ggtitle("Percentage of those Previously Subscribed by Marital Status") +
theme(plot.title = element_text(hjust=0.5, face="bold"),
legend.position = "none",
legend.title = element_blank())
train_df %>%
group_by(education, y) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n)) %>%
filter(y=="yes" & education != "unknown") %>%
ggplot(aes(x = education, y=freq, fill=education)) +
geom_bar(stat="identity") +
geom_text(aes(y =freq , label=paste0(round(freq,3)*100,"%")),nudge_y=0.01) +
scale_y_continuous(labels=scales::percent, limits=c(0, 0.2)) +
labs(y = "Percentage Subscribed", x = "Education", fill = "") +
ggtitle("Percentage of those Previously Subscribed by Education") +
theme(plot.title = element_text(hjust=0.5, face="bold"),
legend.position = "none",
legend.title = element_blank())
train_df %>%
group_by(education, y) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n)) %>%
filter(y=="yes" & education != "unknown") %>%
ggplot(aes(x = education, y=freq, fill=education)) +
geom_bar(stat="identity") +
geom_text(aes(y =freq , label=paste0(round(freq,3)*100,"%")),nudge_y=0.01) +
scale_y_continuous(labels=scales::percent, limits=c(0, 0.2)) +
labs(y = "Percentage Subscribed", x = "Education Level", fill = "") +
ggtitle("Percentage of those Previously Subscribed by Education Level") +
theme(plot.title = element_text(hjust=0.5, face="bold"),
legend.position = "none",
legend.title = element_blank())
## Bank Telemarketing Report
train_df <- train_df %>%
mutate(proba = predict(lm_model, type="response")) %>%
mutate(y_pred = ifelse(proba > 0.5, "yes", "no"))
pospos <- sum(train_df$y_pred=="yes" & train_df$y=="yes")
posneg <- sum(train_df$y_pred=="yes" & train_df$y=="no")
negpos <- sum(train_df$y_pred=="no" & train_df$y=="yes")
negneg <- sum(train_df$y_pred=="no" & train_df$y=="no")
accuracy <- (pospos+negneg)/nrow(train_df)
precision <- (pospos) / (pospos + negpos)
recall <- (pospos) / (pospos + posneg)
f1 <- 2 * precision*recall / (precision + recall)
accuracy
recall
test_df <- test_df %>%
mutate(proba = predict(lm_model, type="response")) %>%
mutate(y_pred = ifelse(proba > 0.5, "yes", "no"))
test_df %>%
mutate(proba = predict(lm_model, type="response"))
test_df <- test_df %>%
mutate(proba = predict(lm_model, newdata=test_df, type="response")) %>%
mutate(y_pred = ifelse(proba > 0.5, "yes", "no"))
predict(lm_model, newdata=test_df, type="response")
predict(lm_model, newdata=test_df, type="response")
test_df
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(knitr)
library(kableExtra)
library(broom)
library(caret)
attrs <- read_csv("../doc/Attribute_Info.csv")
attrs %>%
kbl(caption = "Attribute from Banking Data.") %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(latex_options = "HOLD_position")
df <- read_delim("../data/bank-additional-full.csv",delim=";")
df$education <- ifelse(df$education=="illiterate","other",df$education)
df$job <- fct_relevel(
df$job,
c("unemployed", "self-employed","student", "housemaid", "services", "admin.", "blue-collar", "technician", "management" ,"entrepreneur",
"retired", "unknown")
)
df$education <- fct_relevel(
df$education,
c("basic.4y","basic.6y","basic.9y","high.school","professional.course","university.degree","other","unknown")
)
df$default <- fct_relevel(
df$default,
c("no", "yes", "unknown")
)
df$housing <- fct_relevel(
df$housing,
c("no", "yes", "unknown")
)
df$marital <- fct_relevel(
df$marital,
c("single","married","divorced","unknown")
)
df$loan <- fct_relevel(
df$loan,
c("no", "yes", "unknown")
)
df$month <- fct_relevel(
df$month,
c("mar","apr","may","jun","jul","aug","sep","oct","nov","dec")
)
df$day_of_week <- fct_relevel(
df$day_of_week,
c("mon","tue","wed","thu","fri")
)
df$poutcome <- fct_relevel(
df$poutcome,
c("failure","success","nonexistent")
)
df$y <- fct_relevel(
df$y,
c("no","yes")
)
unique(df$marital)
set.seed(2021)
idx <- sample(1:nrow(df), size = 0.8*nrow(df))
train_df <- df[idx,]
test_df <- df[-idx,]
ggplot(train_df, aes(x=toupper(y), fill=y)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = (..count..)/sum(..count..), label=paste0(round((..count..)/sum(..count..),3)*100,"%")), stat="count",nudge_y=0.05) +
scale_y_continuous(labels=scales::percent, limits=c(0, 1)) +
labs(x="Previous Responded to Campaign", y="Relative Percentage") +
ggtitle("Distribution of Previous Campaign Responds") +
theme(plot.title=element_text(hjust=0.5, face="bold"),
legend.position = "none")
ggplot(train_df, aes(x = age, fill=y)) +
geom_histogram(aes(y=..density..), position="identity", alpha=0.5)+
geom_density(alpha=0.6)+
scale_y_continuous(labels=scales::percent, limits=c(0, 0.05)) +
labs(x="Customer Age", y="Relative Percentage") +
ggtitle("Customer Age vs Previous Campaign Responds") +
theme(plot.title=element_text(hjust=0.5, face="bold"),
legend.position = "top",
legend.title=element_blank())
train_df %>%
group_by(education, y) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n)) %>%
filter(y=="yes" & education != "unknown") %>%
ggplot(aes(x = education, y=freq, fill=education)) +
geom_bar(stat="identity") +
geom_text(aes(y =freq , label=paste0(round(freq,3)*100,"%")),nudge_y=0.01) +
scale_y_continuous(labels=scales::percent, limits=c(0, 0.2)) +
labs(y = "Percentage Subscribed", x = "Education Level", fill = "") +
ggtitle("Percentage of those Previously Subscribed by Education Level") +
theme(plot.title = element_text(hjust=0.5, face="bold"),
legend.position = "none",
legend.title = element_blank())
lm_model <- glm(y~.,family=binomial, data=train_df)
tidy(lm_model) %>%
mutate_if(is.numeric, round, 3)
glance(lm_model)
train_df <- train_df %>%
mutate(proba = predict(lm_model, type="response")) %>%
mutate(y_pred = ifelse(proba > 0.5, "yes", "no"))
pospos <- sum(train_df$y_pred=="yes" & train_df$y=="yes")
posneg <- sum(train_df$y_pred=="yes" & train_df$y=="no")
negpos <- sum(train_df$y_pred=="no" & train_df$y=="yes")
negneg <- sum(train_df$y_pred=="no" & train_df$y=="no")
accuracy <- (pospos+negneg)/nrow(train_df)
precision <- (pospos) / (pospos + negpos)
recall <- (pospos) / (pospos + posneg)
f1 <- 2 * precision*recall / (precision + recall)
accuracy
recall
test_df <- test_df %>%
mutate(proba = predict(lm_model, newdata=test_df, type="response")) %>%
mutate(y_pred = ifelse(proba > 0.5, "yes", "no"))
pospos <- sum(test_df$y_pred=="yes" & test_df$y=="yes")
posneg <- sum(test_df$y_pred=="yes" & test_df$y=="no")
negpos <- sum(test_df$y_pred=="no" & test_df$y=="yes")
negneg <- sum(test_df$y_pred=="no" & test_df$y=="no")
accuracy <- (pospos+negneg)/nrow(test_df)
precision <- (pospos) / (pospos + negpos)
recall <- (pospos) / (pospos + posneg)
f1 <- 2 * precision*recall / (precision + recall)
accuracy
recall
test_df <- test_df %>%
mutate(proba = predict(lm_model, newdata=test_df, type="response")) %>%
mutate(y_pred = ifelse(proba > 0.5, "yes", "no"))
pospos <- sum(test_df$y_pred=="yes" & test_df$y=="yes")
posneg <- sum(test_df$y_pred=="yes" & test_df$y=="no")
negpos <- sum(test_df$y_pred=="no" & test_df$y=="yes")
negneg <- sum(test_df$y_pred=="no" & test_df$y=="no")
accuracy <- (pospos+negneg)/nrow(test_df)
precision <- (pospos) / (pospos + negpos)
recall <- (pospos) / (pospos + posneg)
f1 <- 2 * precision*recall / (precision + recall)
accuracy
recall
train_df <- train_df %>%
mutate(proba = predict(lm_model, type="response")) %>%
mutate(y_pred = ifelse(proba > 0.5, "yes", "no"))
pospos <- sum(train_df$y_pred=="yes" & train_df$y=="yes")
posneg <- sum(train_df$y_pred=="yes" & train_df$y=="no")
negpos <- sum(train_df$y_pred=="no" & train_df$y=="yes")
negneg <- sum(train_df$y_pred=="no" & train_df$y=="no")
accuracy <- (pospos+negneg)/nrow(train_df)
precision <- (pospos) / (pospos + negpos)
recall <- (pospos) / (pospos + posneg)
f1 <- 2 * precision*recall / (precision + recall)
accuracy
recall
test_df <- test_df %>%
mutate(proba = predict(lm_model, newdata=test_df, type="response")) %>%
mutate(y_pred = ifelse(proba > 0.5, "yes", "no"))
pospos <- sum(test_df$y_pred=="yes" & test_df$y=="yes")
posneg <- sum(test_df$y_pred=="yes" & test_df$y=="no")
negpos <- sum(test_df$y_pred=="no" & test_df$y=="yes")
negneg <- sum(test_df$y_pred=="no" & test_df$y=="no")
accuracy <- (pospos+negneg)/nrow(test_df)
precision <- (pospos) / (pospos + negpos)
recall <- (pospos) / (pospos + posneg)
f1 <- 2 * precision*recall / (precision + recall)
accuracy
recall
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(knitr)
library(kableExtra)
library(broom)
library(caret)
attrs <- read_csv("../doc/Attribute_Info.csv")
attrs %>%
kbl(caption = "Attribute from Banking Data.") %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(latex_options = "HOLD_position")
df <- read_delim("../data/bank-additional-full.csv",delim=";")
df$education <- ifelse(df$education=="illiterate","other",df$education)
df$job <- fct_relevel(
df$job,
c("unemployed", "self-employed","student", "housemaid", "services", "admin.", "blue-collar", "technician", "management" ,"entrepreneur",
"retired", "unknown")
)
df$education <- fct_relevel(
df$education,
c("basic.4y","basic.6y","basic.9y","high.school","professional.course","university.degree","other","unknown")
)
df$default <- fct_relevel(
df$default,
c("no", "yes", "unknown")
)
df$housing <- fct_relevel(
df$housing,
c("no", "yes", "unknown")
)
df$marital <- fct_relevel(
df$marital,
c("single","married","divorced","unknown")
)
df$loan <- fct_relevel(
df$loan,
c("no", "yes", "unknown")
)
df$month <- fct_relevel(
df$month,
c("mar","apr","may","jun","jul","aug","sep","oct","nov","dec")
)
df$day_of_week <- fct_relevel(
df$day_of_week,
c("mon","tue","wed","thu","fri")
)
df$poutcome <- fct_relevel(
df$poutcome,
c("failure","success","nonexistent")
)
df$y <- fct_relevel(
df$y,
c("no","yes")
)
unique(df$marital)
set.seed(2021)
idx <- sample(1:nrow(df), size = 0.8*nrow(df))
train_df <- df[idx,]
test_df <- df[-idx,]
ggplot(train_df, aes(x=toupper(y), fill=y)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = (..count..)/sum(..count..), label=paste0(round((..count..)/sum(..count..),3)*100,"%")), stat="count",nudge_y=0.05) +
scale_y_continuous(labels=scales::percent, limits=c(0, 1)) +
labs(x="Previous Responded to Campaign", y="Relative Percentage") +
ggtitle("Distribution of Previous Campaign Responds") +
theme(plot.title=element_text(hjust=0.5, face="bold"),
legend.position = "none")
ggplot(train_df, aes(x = age, fill=y)) +
geom_histogram(aes(y=..density..), position="identity", alpha=0.5)+
geom_density(alpha=0.6)+
scale_y_continuous(labels=scales::percent, limits=c(0, 0.05)) +
labs(x="Customer Age", y="Relative Percentage") +
ggtitle("Customer Age vs Previous Campaign Responds") +
theme(plot.title=element_text(hjust=0.5, face="bold"),
legend.position = "top",
legend.title=element_blank())
train_df %>%
group_by(education, y) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n)) %>%
filter(y=="yes" & education != "unknown") %>%
ggplot(aes(x = education, y=freq, fill=education)) +
geom_bar(stat="identity") +
geom_text(aes(y =freq , label=paste0(round(freq,3)*100,"%")),nudge_y=0.01) +
scale_y_continuous(labels=scales::percent, limits=c(0, 0.2)) +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
labs(y = "Percentage Subscribed", x = "Education Level", fill = "") +
ggtitle("Percentage of those Previously Subscribed by Education Level") +
theme(plot.title = element_text(hjust=0.5, face="bold"),
legend.position = "none",
legend.title = element_blank())
library(devtools)
use_test("ImgCompress.R")
test()
check()
use_package("jpeg")
library(jpeg)
use_package("jpeg")
use_package("jpeg")
check()
use_package("OpenImageR")
check()
use_package("numbers")
check()
use_package("R.utils")
use_package("assertthat")
use_package("covr")
use_package("here")
use_package("png")
use_package("reticulate")
use_package("rprojroot")
use_package("testthat")
check()
document()
document()
document()
document()
document()
document()
load_all()
use_r("ColorConv")
use_test("ColorConv.R")
use_r("Crop")
use_test("Crop.R")
use_r("ImgRotate")
use_test("ImgRotate.R")
load_all()
check()
document()
check()
document()
check()
check()
document()
check()
